plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name

        mixinConfig "hextweaks-common.mixins.json"
        mixinConfig "hextweaks.mixins.json"
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

repositories {
    mavenCentral()
    maven { url = "https://maven.blamejared.com/"}
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://dvs1.progwml6.com/files/maven/"}
    maven { url = "https://modmaven.dev"}
    maven { url = "https://maven.theillusivec4.top" }
    maven { url = 'https://thedarkcolour.github.io/KotlinForForge/'}
}


dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-forge:${rootProject.architectury_version}"

    modImplementation("at.petra-k.hexcasting:hexcasting-forge-1.19.2:0.10.3") {
        transitive = false
    }

    //modRuntimeOnly "top.theillusivec4.curios:curios-forge:1.19.2-5.1.1.0"
    modRuntimeOnly "mezz.jei:jei-1.19.2-forge:11.4.0.282"
    modRuntimeOnly "vazkii.patchouli:Patchouli:1.19.2-77"
    modRuntimeOnly "at.petra-k.paucal:paucal-forge-1.19.2:0.5.0"
    runtimeOnly "thedarkcolour:kotlinforforge:3.7.1"
    //modRuntimeOnly "com.github.Virtuoel:Pehkui:3.6.0-1.19.2-forge"
    modImplementation "vazkii.patchouli:Patchouli:1.19.2-77"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
